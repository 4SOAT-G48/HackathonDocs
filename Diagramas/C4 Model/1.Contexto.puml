@startuml C4_Context

'!include Commons/Skinparam.puml

'!include <C4/C4_Container>
!include <C4/C4_Context>


skinparam wrapWidth 300
LAYOUT_LANDSCAPE()


title
<b>Health&Med</b> - <i>Startup de Telemedicina</i>
C4 Model: Contexto
end title

'atores
Person(patient, "Paciente", "Usuário Paciente")
Person(doctor, "Médico", "Usuário Médico")

'sistemas e containers
Enterprise_Boundary(healthmed, "Health&Med", "Startup de Telemedicina") {
    Person(admin, "Administrador", "Usuário Administrador")
    
    System_Boundary(telemed, "Tel&Med", "Telemedicina") {
        System(frontend, "Frontend", "Interface do Usuário")
        System(backend, "Backend", "Lógica de Negócio")
    }
}

Rel(doctor, admin, "Requisita cadastro")

Rel(admin, frontend, "Usa")
note on link
  - Autentica-se com email e senha
  - Cadastrar médicos e seus dados
end note

Rel(doctor, frontend, "Usa")
note on link
  - Autentica-se com CRM e senha
  - Cadastro/Edição de Horários Disponíveis
  - Aceite ou Recusa de Consultas Médicas
  - Participa da teleconsulta
  - Adiciona evolução, prescrições e atestados
end note


Rel(patient, frontend, "Usa")
note on link
  - Autentica-se com email, CPF e senha
  - Busca médicos
  - Agenda consultas
  - Acessar prontuário e subir arquivos
  - Participa da teleconsulta
end note



'autenticação
Enterprise_Boundary(aws, "AWS", "Amazon Web Services") {
    Boundary(authentication, "Autenticação", "Serviços usados na Autenticação") {
        System_Ext(apiGateway, "AWS API Gateway", "Ponto de entrada para requisições da API")
        System_Ext(cognito, "AWS Cognito", "Gerenciamento de autenticação e autorização")
        System_Ext(lambda, "AWS Lambda", "Processa requisições da API e verifica o perfil do usuário")
    }
}

'autenticação relacionamentos
Rel(apiGateway, cognito, "Autentica e autoriza requisições")
Rel_Back(apiGateway, cognito, "Recebe tokens de autenticação")
Rel(apiGateway, lambda, "Encaminha requisições autenticadas")
Rel_Back(apiGateway, lambda, "Retorna respostas")
BiRel(frontend, apiGateway, "Todas as requisições primeiro vão passar pelo API Gateway")
BiRel(apiGateway, backend, "Encaminha requisições para o Backend")



SHOW_LEGEND()

@enduml